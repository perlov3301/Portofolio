{"version":3,"sources":["reducers/loreducer.js","reducers/categoryreducer.js","reducers/index.js","actions/types.js","store.js","components/getos.js","db2.js","components/categories1.js","pages/categornative.js","pages/choosecatedit.js","db1.js","pages/chooselocedit.js","pages/chooselocremove.js","components/catlistedit.js","pages/editcat.js","pages/editreact.js","components/hellonative.js","components/notelist2.js","pages/index.js","components/navbar2.js","pages/newcategory.js","pages/newlocation.js","pages/sectionlist12.js","googlemapreact/googlemapreact.js","pages/show.js","pages/remove2.js","components/catlist.js","pages/showcategory2.js","components/footer3.js","App.js","serviceWorker.js","index.js"],"names":["initialstate","items","item","combineReducers","locations","state","arguments","length","undefined","action1","type","console","log","Object","objectSpread","payload","categories","middleware1","thunk","store","createStore","rootReducer","applyMiddleware","apply","getos","userAgent","window","navigator","platform","os","indexOf","test","DB2","name","classCallCheck","this","db2","PouchDB","compact","then","info","catch","err","toString","allDocs","include_docs","doc","rows","all","a","forEach","b","id","c","createdat","Date","updatedat","now","_id","title","put","response","res","yes","get","note","Categories1","props","possibleConstructorReturn","getPrototypeOf","call","postitems","values","map","n","react_default","createElement","key","className","Link","to","concat","Button_default","variant","onClick","context","router","history","goBack","style","backgroundColor","borderRadius","color","padding","textDecoration","textDecorationColor","ArrowBack_default","Component","contextTypes","Listitem1","_this","onpress","onpressitem","bind","assertThisInitialized","textcolor","selected","TouchableOpacity","onPress","View","Text","React","PureComponent","Categornative","_this2","Map","_keyextractor","index","_onpressitem","setState","set","_renderitem","_ref","categornative_Listitem1","indicator11","loading","ActivityIndicator","size","animating","renderme1","text1","renderme2","_this3","styles","box","text","textunder","FlatList","data","extraData","keyExtractor","renderItem","_ref2","ListFooterComponent","StyleSheet","create","fontWeight","textDecorationLine","Choosecatedit","choosecatedit_Listitem1","DB1","db1","body","alat","alng","category","status","descending","allnotes","notes","categ","query","emit","results","dbb","ddc","views","by_name","error","note1","remove","ok","newcategory","bulkDocs","array","Listitemloc","fontSize","Chooselocedit","chooselocedit_Listitemloc","myindex","dbcat","dbapp","catsections","sectionsnotes","getallnotes","getcategories","catvalues","notvalues","searray","titlehere","notesarray","toConsumableArray","obj","push","arr","display","flex","ScrollView","SectionList","height","section","renderSectionHeader","_ref3","marginBottom","sections","chooselocremove","chooselocremove_Listitemloc","Catlistedit","rendernotes","Editcat","updatevalue","e","defineProperty","target","value","handlesave","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","preventDefault","catnotes","onsaveedit","replace","stop","_x","mounted","_rev","cat","uddatedat","getcategory","catlist","onSubmit","flexDirection","alignItems","required","autoFocus","placeholder","onChange","Landscape_default","catlistedit","textAlign","Editpage","handlesaveedit","dbloc","noteloc","dbcateg","onenote","loc","sort","aaa","bbb","textA","toUpperCase","textB","localeCompare","optioni","step","Hellonative","Notelist2","justifyContent","Indexpage","a11","notelist2","Navbar2","background","Home_default","Newcategory","onsave","sent","Newlocation","updatevaluetitle","_objectSpread2","Sectionlist12","sectionlist12_Listitemloc","container","Mymapcomponent","Googlemapreact","parseFloat","width","lib_default","bootstrapURLKeys","defaultCenter","defaultZoom","googlemapreact_Mymapcomponent","lat","lng","defaultProps","center","zoom","Showpage","fvibration","Vibration","vibrate","cancel","googlemapreact","Removepage2","handleremove","anote","localStorage","getItem","onremove","setItem","after","dbchanges","titletoremove","gracerfulunmount","removeEventListener","addEventListener","nextProps","nextState","readOnly","Catlist","Showcategory2","components_catlist","Footer3","classes","marginTop","root","button","LibraryBooks_default","ListRounded_default","withStyles","theme","alignSelf","onMouseOver","stylesnative","App","createnote","abrupt","_callee2","_ref4","_context2","editnote","_x2","_ref5","_callee3","lenkeys","renotes","_context3","keys","removenote","reduce","object","_x3","getcatnotesap","_ref6","_callee4","_context4","getcatnotesdb","_x4","handlesavecategory","_ref7","_callee5","_ref8","_context5","createcategory","_x5","handlesaveeditcat","_ref9","_callee6","_context6","editcat","editarray","_x6","_x7","process","Route","exact","path","component","pages_Indexpage","assign","show","match","params","newlocation","pages_newcategory","choosecatedit","chooselocedit","pages_chooselocremove","editreact","remove2","categornative","sectionlist12","categories1","showcategory2","reactvers","version","es","BrowserRouter","navbar2_Navbar2","rendercontent","hellonative","footer3","Boolean","location","hostname","AppRegistry","registerComponent","runApplication","rootTag","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c305181d.chunk.js","sourcesContent":["// all the acions are commited\nimport { FETCH_LOCS, NEW_LOC, EDIT_LOC } from '../actions/types';\n\nconst initialstate = {\n    items: [], // represents posts from actions\n    item: {}  // new added\n};\n// fun evaluates what type, that we're dealing with\nexport default function (state = initialstate, action1) {\n    switch (action1.type) { // calls to action files\n      case FETCH_LOCS: {\n          console.log('loreducer;fetch locations');\n          return {\n              ...state,\n              items: action1.payload // myload\n          };\n         //  break;\n      }\n      case NEW_LOC: {\n        console.log('loreducer;new');\n        return {\n            ...state,\n            items: action1.payload // myload\n        };\n        // break;\n      }\n      case EDIT_LOC: {\n        console.log('loreducer;edit');\n        return {\n            ...state,\n            items: action1.payload // myload\n        };\n       // break;\n      }\n      default: return state;\n    }\n};","// import { FETCH_CA, NEW_POST } from '../actions/types';\n\nconst initialstate = {\n    items: [],\n    item: {}\n}\n\nexport default function(state = initialstate, action) {\n    switch(action.type) {\n        default:\n          return state;\n    }\n}","// rootReducer\nimport { combineReducers } from 'redux';\nimport loreducer from './loreducer';// postreducer\nimport categoryreducer from './categoryreducer';\n\nexport default combineReducers ({\n    locations: loreducer, // was posts and postsreducer\n    categories: categoryreducer\n});","// export const FETCH_POSTS = 'FETCH_POSTS';;\n// export const NEW_POST = 'NEW_POSTS';\nexport const FETCH_LOCS = 'LIST_LOCS';\nexport const NEW_LOC = 'NEW_LOC';\nexport const EDIT_LOC = 'EDIT_LOC';\nexport const FETCH_CA = 'FETCH_CA';\nexport const NEW_CA = 'NEW_CA';","import { createStore, applyMiddleware } \n   from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers'; \n\nconst initialstate = {};\nconst middleware1 = [thunk];\n\nconst store = createStore(rootReducer, \n    initialstate, applyMiddleware(...middleware1));\n\nexport default store;","export default function getos() {\n    var userAgent = window.navigator.userAgent,\n        platform = window.navigator.platform,\n        macosPlatforms = ['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'],\n        windowsPlatforms = ['Win32', 'Win64', 'Windows', 'WinCE'],\n        iosPlatforms = ['iPhone', 'iPad', 'iPod'],\n        os = null;\n  \n    if (macosPlatforms.indexOf(platform) !== -1) {\n      os = 'Mac OS';\n    } else if (iosPlatforms.indexOf(platform) !== -1) {\n      os = 'iOS';\n    } else if (windowsPlatforms.indexOf(platform) !== -1) {\n      os = 'Windows';\n    } else if (/Android/.test(userAgent)) {\n      os = 'Android';\n    } else if (!os && /Linux/.test(platform)) {\n      os = 'Linux';\n    }\n    return os;\n  }\n ","import PouchDB from 'pouchdb';\n \nexport default class DB2 {\n    constructor(name =  'category2') {\n        this.db2 = new PouchDB(name);\n        // console.log('db2.js constructor1', this.db2);\n        // this.db2.destroy().catch(function(err) { console.log(err.toString()) });\n        // let a = 'tel aviv';\n        // let b = a.replace(/ /g,\"_\") + '_id';\n        // let doc = {\n        //       _id: b,\n        //       title: a,\n        //       createdat: new Date(),\n        //       updatedat: new Date()\n        //   };\n        // this.db2.put(doc, { force: true }, function(err, res) {\n        //   if (err) { console.log('db2;constructor;puterr', err.toString()) }\n        //   console.log('res', res);\n        // });\n        // this.db2.get('idtelaviv', function(err, doc) {\n        //     if (err) { \n        //       console.log('db2.js;constructor;get err=', err.toString()); \n        //       if (doc === undefined || doc === null || !doc._id) {\n        //          doc = {\n        //            _id: 'telavivid',\n        //            category: 'tel aviv',\n        //            createdat: new Date(),\n        //            updatedat: new Date()\n        //         };\n        //         return doc;\n        //       }\n        //     } \n        //   });\n        //   a = 'rishon le Zion';\n        //   b = a.replace(/ /g,\"_\") + '_id';\n        //   doc = {\n        //         _id: b,\n        //         title: a,\n        //         createdat: new Date(),\n        //         updatedat: new Date()\n        //     };\n        //   this.db2.put(doc, { force: true }, function(err, res) {\n        //     if (err) { console.log('db2;constructor;puterr', err.toString()) }\n        //     console.log('res', res);\n        //   });  \n        //   a = 'ramat gan';\n        //   b = a.replace(/ /g,\"_\") + '_id';\n        //   doc = {\n        //         _id: b,\n        //         title: a,\n        //         createdat: new Date(),\n        //         updatedat: new Date()\n        //     };\n        //   this.db2.put(doc, { force: true }, function(err, res) {\n        //     if (err) { console.log('db2;constructor;puterr', err.toString()) }\n        //     console.log('res', res);\n        //   }); \n          this.db2.compact().then(function (info) { }).catch(function (err) {\n            console.log('db2;compaction err=', err.toString());\n           });\n    } // constructor\n    async getcategories () {\n        // include_docs when query returns it include all data instead of\n        // where or not the documents exists\n        let all = await this.db2.allDocs({ include_docs: true } ,\n           function(err, doc) {\n              if (err) { console.log('db2.js getcategories err=' + err.toString()); }\n              if (doc.rows.length === 0) {\n                console.log('db2.js getcategories befor doc.length=0');\n              } else { console.log('db2.js getcategories was doc.length=', doc.rows.length); }\n            }\n          );\n        let a = {}; // actually it is array of docs\n        // all.rows response with docs\n        all.rows.forEach((b) => { a[b.id] = b.doc; });\n        return a ;\n    }\n  \n    async createcategory(c) {\n        c.createdat = new Date();\n        c.updatedat = new Date();\n        let a = Date.now();\n        c._id = c.title + a.toString();\n        const res = await this.db2.put({ ...c}, function(err, response) {\n            if (err) { console.log('db2.js; create err=', err.toString()); }\n            console.log('db2.js; createnote res=', response);\n        });\n        return res;\n    }\n    async getcat(_id) { \n        let yes = false;\n        let a = await this.db2.get(_id, function(err, doc) {\n            if (err) { return console.log(err.toString()); }\n            else { yes = true }\n        });\n        if (yes) { console.log('db2;getcat;a=', a); }\n        return a;\n     }\n    async editcat(c) {\n        console.log('db2;editcat;c=', c);\n        // const ddb = this.db2;\n        c.updatedat = new Date();\n        // let a = Date.now();\n        // c._id = c.title + a.toString();\n        const res = await this.db2.put(c, function(err, response) {\n            if (err) { console.log('db2.js; create err=', err.toString()); }\n            console.log('db2.js; createnote res=', response);\n        });\n        return res;\n    }\n    // async editnote(note) {\n    //     console.log('db1;editnote;note', note);\n    //     let dbb = this.db1;\n    //     let yes = false;\n    //     note.updatedat = new Date();\n    //     await dbb.put(note, function(error, response) {\n    //         if (error) { console.log('db1.js;editnote put error=', \n    //           error.toString()); }\n    //         yes = response.ok;\n    //     });\n    async getnote(note) {  }\n}\n","import React, { Component } from 'react';\nimport DB2 from '../db2';\nimport '../App.css';\nimport { Link } from 'react-router-dom';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport Button from '@material-ui/core/Button';\n\n class Categories1 extends Component {\n    constructor(props) {\n      super(props);\n      // this.state = {\n      //   dbcateg: new DB2(),\n      //   categories: {},\n      //   loading: true\n      // }\n    }\n    static contextTypes = {\n      router: () => null, // replace with PropTypes.object if you use them\n    }\n  //   async componentWillMount() {\n  //     const a = await this.state.dbcateg.getcategories();\n  //     this.setState({\n  //         categories: a,\n  //         loading: false\n  //     });\n  //   console.log(\"categories1;willmount;getcategories a.keys=\", Object.keys(a) + \n  //     \"; idtelaviv=\", a.idtelaviv );\n  // }\n   \n    async componentWillMount() {\n      // await console.log(\"categories1;will;props=\", this.props );\n      }\n  render() {\n    const a = Object.values(this.props.categories);\n    const postitems = a.map((n) => \n      <fieldset key={n._id}>\n        <legend>Object.values(this.state.categories).map</legend>\n        <h3 className=\"navbar\">\n          <Link to={`/categories/${n._id}`} > {n.title}</Link>\n        </h3>\n      </fieldset>);\n    // const postitems = this.state.categories.map(post => (\n    //   <div key={post.id}>\n    //     <h3>{post.category}</h3>\n    //   </div>\n    // ));\n    return (\n      <fieldset>\n        <legend>\n        <Button variant=\"contained\"  \n            onClick={this.context.router.history.goBack}\n            style={{backgroundColor: 'rgb(45,65, 100)',\n            borderRadius: '0.3em',\n            color: 'white',\n            padding: '0.1em 0.3em',\n            textDecoration: 'none',\n            textDecorationColor: 'blue'}} >\n          <ArrowBackIcon />back\n        </Button>\n          components/categories1js;min FlatList with Traversy</legend>\n        {postitems}\n      </fieldset>\n    )\n  }\n}\nexport default Categories1;\n","import React from 'react';\n// import PropTypes from 'prop-types';\n// import { connect } from 'react-redux';\n// import { fetchlocations1 } from '../actions/loactions';\n\nimport { StyleSheet,  Text, View, \n    FlatList,  TouchableOpacity,\n    ActivityIndicator } from 'react-native';\n// import { any } from '../../node_modules/react-native/flow/Map';\n// import { any } from 'prop-types';\n// import DB2 from '../db2';\nimport { Link } from 'react-router-dom';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport Button from '@material-ui/core/Button';\n\nclass Listitem1 extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.onpress = this.onpress.bind(this);\n  }\n  onpress = () => {\n    // I don't now why this works\n    //  this.props.onpressitem(this.props._id);\n    this.props.onpressitem(this.props.id);\n  }\n  render() {\n    const textcolor = this.props.selected ? \"red\" : \"black\";\n    console.log('categornative;listitem1;render,props=', this.props);\n    return (\n      <TouchableOpacity onPress={this.onpress}>\n        <View>\n          <Text style={{ color: textcolor }}>\n            <h3 className=\"navbar\">\n              <Link to={`/categories/${this.props.id}`} \n                  style={{padding:'0.5em'}} > \n                {this.props.title}</Link>\n            </h3>\n            \n          </Text>\n        </View>\n      </TouchableOpacity>\n    );\n  }\n}\n\nclass Categornative extends React.Component {\n  constructor(props) {\n    super(props);\n    this.renderme1 = this.renderme1.bind(this);\n    this._renderitem = this._renderitem.bind(this);\n  }\n  \n  state =  {\n    selected: (new Map(): Map<string, boolean>),\n    // dbcateg: new DB2(),\n    // categories: {}\n  };\n  static contextTypes = {\n    router: () => null, // replace with PropTypes.object if you use them\n  }\n  async componentDidMount () {\n    // a is for setstate for categories\n    // const a = await this.state.dbcateg.getcategories();\n    // this.setState({\n    //     categories: a,\n    //     loading: false\n    // });\n  } // didmount\n  _keyextractor = (item, index) => item._id;\n  _onpressitem = (id) => {\n    // updater functions are preferred for transactional updates\n    this.setState((state) => {\n      // copy the map rather than modifying state\n      const selected = new Map(state.selected);\n      selected.set(id, !selected.get(id)); // toggle\n      return {selected};\n    })\n  };\n  _renderitem = ({item}) => (\n    <Listitem1\n      id={item._id}\n      onpressitem={this._onpressitem}\n      selected={!!this.state.selected.get(item._id)}\n      title={item.title}\n  />\n  );\n  indicator11 = () => this.state.loading ? \n    (<ActivityIndicator size=\"large\" color=\"#0000ff\" animating />)\n    : null\n    ;\n  renderme1 = (text1) => (<Text>{text1}</Text>);\n  renderme2 = (\n    <Link to=\"/\" >\n      <Button variant=\"contained\"  style={{backgroundColor: 'rgb(45,65, 100)',\n              borderRadius: '0.3em',\n              color: 'white',\n              padding: '0.1em 0.3em',\n              textDecoration: 'none',\n              textDecorationColor: 'blue'}} >\n        <ArrowBackIcon />back\n      </Button>\n   </Link>\n  );\n \n  render() {\n    const a = Object.values(this.props.categories);\n    console.log('categornative;render;a=', a);\n    // instead of data={this.state.adata}\n    return (\n      <fieldset>\n        <legend>\n          <Button variant=\"contained\"  \n              onClick={this.context.router.history.goBack}\n              style={{backgroundColor: 'rgb(45,65, 100)',\n              borderRadius: '0.3em',\n              color: 'white',\n              padding: '0.1em 0.3em',\n              textDecoration: 'none',\n              textDecorationColor: 'blue'}} >\n            <ArrowBackIcon />back\n          </Button> &nbsp;pages/categornativejs </legend>\n        <View style={styles.box}>\n          <Text style={styles.text}>if you need section support, use 'SectionList'</Text>\n          <Text style={styles.textunder}>React Native: FlatList with Map()</Text>\n          <FlatList \n            data={a}\n            extraData={this.state}\n            keyExtractor={this._keyextractor}\n            renderItem={({item}) => this._renderitem({item})}\n            ListFooterComponent={this.indicator11}\n          \n          />\n        </View>\n      </fieldset>\n      \n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  box: { \n      borderRadius: '0.3em',\n      padding: 10,\n      backgroundColor: 'rgba(125, 125, 100, 0.88)'\n      },\n  text: { fontWeight: 'bold', color: '#ffffff' },\n  textunder: { fontWeight: 'bold', color: '#ffffff', \n  textDecorationLine: \"underline\" }\n});\nexport default Categornative;\n   // adata: [{key: 'tel aviv'}, {key: 'rishon'}, {key: 'ramat gan'}],\n    // adata: [\n    //   {key: 'tel aviv', id: 'id1', title: 'tel aviv'}, \n    //   {key: 'rishon', id: 'id2', title: 'rishon'}, \n    //   {key: 'ramat gan', id: 'id3', title: 'ramat gan'}],\n    // adata: [\n    //     { _id: 'id1', title: 'tel aviv'}, \n    //     { _id: 'id2', title: 'rishon'}, \n    //     { _id: 'id3', title: 'ramat gan'}],","// from pages/categotnative\nimport React from 'react';\n// import PropTypes from 'prop-types';\n// import { connect } from 'react-redux';\n// import { fetchlocations1 } from '../actions/loactions';\n\nimport { StyleSheet,  Text, View, \n    FlatList,  TouchableOpacity,\n    ActivityIndicator } from 'react-native';\n// import { any } from '../../node_modules/react-native/flow/Map';\n// import { any } from 'prop-types';\n// import DB2 from '../db2';\nimport { Link } from 'react-router-dom';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport Button from '@material-ui/core/Button';\n\nclass Listitem1 extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.onpress = this.onpress.bind(this);\n  }\n  onpress = () => {\n    // I don't now why this works\n    //  this.props.onpressitem(this.props._id);\n    this.props.onpressitem(this.props.id);\n  }\n  render() {\n    const textcolor = this.props.selected ? \"red\" : \"black\";\n    console.log('choosecatedit;listitem1;render,props=', this.props);\n    return (\n      <TouchableOpacity onPress={this.onpress}>\n        <View>\n          <Text style={{ color: textcolor }}>\n            <h3 className=\"navbar\">\n              <Link to={`/cateedit/${this.props.id}`} style={{padding:'0.5em'}} > \n                {this.props.title}</Link>\n            </h3>\n            \n          </Text>\n        </View>\n      </TouchableOpacity>\n    );\n  }\n}\n\nclass Choosecatedit extends React.Component {\n  constructor(props) {\n    super(props);\n    console.log('choosecatedit;constructor');\n    this.renderme1 = this.renderme1.bind(this);\n    this._renderitem = this._renderitem.bind(this);\n  }\n  \n  state =  {\n    selected: (new Map(): Map<string, boolean>),\n    // dbcateg: new DB2(),\n    // categories: {}\n  };\n  static contextTypes = {\n    router: () => null, // replace with PropTypes.object if you use them\n  }\n  async componentDidMount () {\n    // a is for setstate for categories\n    // const a = await this.state.dbcateg.getcategories();\n    // this.setState({\n    //     categories: a,\n    //     loading: false\n    // });\n  } // didmount\n  _keyextractor = (item, index) => item._id;\n  _onpressitem = (id) => {\n    // updater functions are preferred for transactional updates\n    this.setState((state) => {\n      // copy the map rather than modifying state\n      const selected = new Map(state.selected);\n      selected.set(id, !selected.get(id)); // toggle\n      return {selected};\n    })\n  };\n  _renderitem = ({item}) => (\n    <Listitem1\n      id={item._id}\n      onpressitem={this._onpressitem}\n      selected={!!this.state.selected.get(item._id)}\n      title={item.title}\n  />\n  );\n  indicator11 = () => this.state.loading ? \n    (<ActivityIndicator size=\"large\" color=\"#0000ff\" animating />)\n    : null\n    ;\n  renderme1 = (text1) => (<Text>{text1}</Text>);\n  renderme2 = (\n    <Link to=\"/\" >\n      <Button variant=\"contained\"  style={{backgroundColor: 'rgb(45,65, 100)',\n              borderRadius: '0.3em',\n              color: 'white',\n              padding: '0.1em 0.3em',\n              textDecoration: 'none',\n              textDecorationColor: 'blue'}} >\n        <ArrowBackIcon />back\n      </Button>\n   </Link>\n  );\n \n  render() {\n    const a = Object.values(this.props.categories);\n    console.log('categornative;render;a=', a);\n    // instead of data={this.state.adata}\n    return (\n      <fieldset>\n        <legend>\n          <Button variant=\"contained\"  \n              onClick={this.context.router.history.goBack}\n              style={{backgroundColor: 'rgb(45,65, 100)',\n              borderRadius: '0.3em',\n              color: 'white',\n              padding: '0.1em 0.3em',\n              textDecoration: 'none',\n              textDecorationColor: 'blue'}} >\n            <ArrowBackIcon />back\n          </Button> &nbsp;pages/choosecateditjs </legend>\n        <View style={styles.box}>\n          <Text style={styles.textunder}>React Native: FlatList with Map()</Text>\n          <FlatList \n            data={a}\n            extraData={this.state}\n            keyExtractor={this._keyextractor}\n            renderItem={({item}) => this._renderitem({item})}\n            ListFooterComponent={this.indicator11}\n          \n          />\n        </View>\n      </fieldset>\n      \n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  box: { \n      borderRadius: '0.3em',\n      padding: 10,\n      backgroundColor: 'rgba(125, 125, 100, 0.88)'\n      },\n  text: { fontWeight: 'bold', color: '#ffffff' },\n  textunder: { fontWeight: 'bold', color: '#ffffff', \n  textDecorationLine: \"underline\" }\n});\nexport default Choosecatedit;\n   // adata: [{key: 'tel aviv'}, {key: 'rishon'}, {key: 'ramat gan'}],\n    // adata: [\n    //   {key: 'tel aviv', id: 'id1', title: 'tel aviv'}, \n    //   {key: 'rishon', id: 'id2', title: 'rishon'}, \n    //   {key: 'ramat gan', id: 'id3', title: 'ramat gan'}],\n    // adata: [\n    //     { _id: 'id1', title: 'tel aviv'}, \n    //     { _id: 'id2', title: 'rishon'}, \n    //     { _id: 'id3', title: 'ramat gan'}],","import PouchDB from 'pouchdb';\n\nexport default class DB1 {\n    constructor(name =  'location1') {\n        this.db1 = new PouchDB(name);\n        \n        // console.log('db1.js constructor', this.db1);\n        // {force: true} option\n        // this.db1.put({\n        //         _id: 'perlov3301@gmail.com',\n        //         title: 'default Location',\n        //         body: 'tel-aviv',\n        //         alat: '32.084',\n        //         alng: '34.774',\n        //         category: 'tel aviv',\n        //         createdat: new Date(),\n        //         updatedat: new Date()\n        //       }, {force: true})\n        //   .then(function (response) {  console.log('db1 constructor: default was added'); })\n        //   .catch(function (err) { console.log('db1 constructor put error:', err.toString()); })\n        //   ;\n        this.db1.get('perlov3301@gmail.com', function(err, doc) {\n            doc = {\n                _id: 'perlov3301@gmail.com',\n                title: 'default Location',\n                body: 'tel-aviv',\n                alat: '32.084',\n                alng: '34.774',\n                category: 'tel aviv',\n                createdat: new Date(),\n                updatedat: new Date()\n            };\n            if (err) {\n                if (err.name === 'not found' || err.status === 409)  {\n                    this.db1.put(doc, function(err, res) {\n                        if (err) { console.log('db1.js;constructor put err'); }\n                    });\n                } else { \n                    console.log('db1.js;constructor;error after put default') }\n            }\n\n        });\n    }\n    async getallnotes( ) {\n        // include_docs when query returns it include all data instead of\n        // where or not the documents exists\n        let allnotes = await this.db1.allDocs({ include_docs: true, descending: false }\n          ,\n           function(err, doc) {\n              if (err) { console.log('db1.js getallnotes err=' + err.toString()); }\n              if (doc.rows === 'undefined' || doc.rows.length === 0) {\n                console.log('db1.js getallnotes befor doc.length=0');\n              } else { console.log('db1.js geallnotes was doc.length=', doc.rows.length); }\n            }\n          );\n        let notes = {};\n        // allnotes.rows response with docs\n        allnotes.rows.forEach((n) => {   notes[n.id] = n.doc;  });\n        return notes;\n    }\n    async getcategory(categ) {\n        console.log('db1;getcategory;categ=', categ);\n        let a = await this.db1.query(function(doc, emit) {\n            if (doc.category === categ.title) { emit(doc); }\n          }, {include_docs : true} , function(err, results) {\n            if (err) { return console.log(err); }\n            // handle result\n          });\n        let notes = {}; // notes.rows response with docs\n        a.rows.forEach((n) => { \n            console.log('db1;getcategory;n.doc.category=', n.doc.category);\n            notes[n.id] = n.doc; \n           });\n        return notes;\n    }\n    async getcatnotesdb (c) {\n        console.log('db1;getcatnotesdb;c = ', c);\n        let dbb = this.db1;\n        let notes = {}; // notes.rows response with docs\n\n        // let ddc = {\n        //     _id: '_design/index',\n        //     views: {\n        //       index: {\n        //         map: function mapFun(doc, emit) {\n        //           if (doc.category === c.title) {\n        //             emit(doc.category);\n        //           }\n        //         }.toString()\n        //       }\n        //     }\n        //   };\n          let ddc = {\n            _id: '_design/my_index',\n            views: {\n              by_name: {\n                map: function (doc, emit) { \n                        console.log('db1;getnotesdb;map;doc=', doc);\n                        if (doc.category === c.title) {\n                            emit(doc);\n                        }\n                     }.toString()\n              }\n            }\n          };\n        await dbb.put(ddc, function(err) {\n          if (err) { console.log('db1;getnotesdb;dbb.put;err=', err.toString()); }\n          if(err && err.name === 'conflict') {\n            return console.log('db1js;getcategorydb;put designdoc err=', \n                err.toString());\n          }\n          // find docs where category === c.title\n          console.log('db1js;getcatnotesdb;before query');\n          dbb.query('index',\n            {\n              key: c.title,\n              include_docs: true\n            },\n            function (err, res) {\n              console.log('query')\n              res.rows.forEach((n) => {   notes[n.id] = n.doc;  });\n            }\n          );\n        });\n        return notes;\n    }\n    async createnote(note) {\n        note.createdat = new Date();\n        note.updatedat = new Date();\n        let a = Date.now();\n        note._id = note.title + a.toString();\n        const res = await this.db1.put({ ...note}, function(err, response) {\n            if (err) { console.log('db1.js; createnote err=', err.toString()); }\n            console.log('db1.js; createnote res=', response);\n        });\n\n        return res;\n    }\n    async editnote(note) {\n        console.log('db1;editnote;note', note);\n        let dbb = this.db1;\n        // let yes = false;\n        note.updatedat = new Date();\n        // dbb.get(note._id, function(err, doc) {\n        //     if (err) { return console.log('db1;editnote;err=', err)}\n        //     dbb.put(doc);\n        // });\n        const res = await dbb.put({...note}, function(error, response) {\n            if (error) { console.log('db1.js;editnote put error=', \n              error.toString()); }\n           // yes = response.ok;\n        });\n        // const res = await this.db1.post({ ...note});\n        // const res = await this.db1.get(note._id, function(err, doc) {\n        //     if (err) { console.log('db1.js;editcat get err=', err.toString()); }\n        //     console.log('db1;editnote;afterput doc=', doc);\n           \n        // });\n        return res;\n    }\n    async getnote(_id) { \n        let yes = false;\n        let a = await this.db1.get(_id, function(err, doc) {\n            if (err) { return console.log(err.toString()); }\n            else { yes = true }\n        });\n        if (yes) { console.log('db1;getnote;a=', a); }\n        return a;\n     }\n    async removenote(note1) {\n        // let dbchanges = this.db1.changes({doc_ids: [note1._id]})\n        console.log('db1;removenote;note=', note1);\n        // let dbb = this.db1;\n        let yes = false;\n        let n = await this.db1.get(note1._id, function(err, doc)  {\n            if(err) { console.log('db1;removenote;get by id n=', n); }\n        });\n        await this.db1.remove(n, function(err, res) {\n            if (err) { return console.log('db1;removenote;remove err=', \n              err.toString()); }\n        console.log('db1;removenote;res=', res)\n            yes = res.ok;\n          });\n        return yes;\n    }\n    async editnotescategory(categ, newcategory) {\n        // from getcategory(cat)\n        console.log('db1;getcategory;categ=', categ);\n        let a = await this.db1.query(function(doc, emit) {\n            if (doc.category === categ.title) { emit(doc); }\n          }, {include_docs : true} , function(err, results) {\n            if (err) { return console.log(err); }\n            // handle result\n          });\n        let notes = {}; // notes.rows response with docs\n        a.rows.forEach((n) => { \n          console.log('db1;getcategory;n.doc.category=', n.doc.category);\n            n.doc.category = newcategory;\n            notes[n.id] = n.doc;  });\n        await this.db1.bulkDocs(notes, function(err, response) {\n              if (err) { return console.log(err); }\n              // handle result\n            });\n        return notes;\n    }\n    async editarray(array) {\n      await this.db1.bulkDocs(array, function(err, res) {\n        if (err) {  return console.log('db1;editarray', err.toString()); }\n      });\n    }\n}\n","import React from 'react';\n// import PropTypes from 'prop-types';\n// import { connect } from 'react-redux';\nimport { StyleSheet, Text, View, SectionList,\n  ActivityIndicator, TouchableOpacity,\n  ScrollView } from 'react-native';\nimport DB2 from '../db2';\nimport DB1 from '../db1';\nimport { Link } from 'react-router-dom';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport Button from '@material-ui/core/Button';\n\nclass Listitemloc extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.onpress = this.onpress.bind(this);\n  }\n  onpress = () => {\n    console.log('listitemloc;onpress;this.props=', this.props);\n    // this.props.id only not ._id, somehow it works\n    this.props.onpressitem(this.props.id);\n  }\n  render() {\n    const textcolor = this.props.selected ? \"red\" : \"black\";\n    // console.log('chooselocedit;listitemloc;render,props=', this.props);\n    return (\n      // className=\"navbar\"\n      <TouchableOpacity onPress={this.onpress}>\n        <View>\n          <Text style={{ color: textcolor }} \n              key={this.props.id}>\n            <Text className=\"navbar\">\n              <Link to={`/locedit/${this.props.id}`} \n                 style={{padding:'0.1em 0.7em', \n                 fontWeight: 'bold',\n                 fontSize: '1.16em'}} > \n                {this.props.title}</Link>\n            </Text>\n            \n          </Text>\n        </View>\n      </TouchableOpacity>\n    );\n  }\n}\nclass Chooselocedit extends React.Component {\n  constructor(props) {\n    super(props);\n    console.log('chooselocedit;constructor;props=', this.props);\n    this.state =  {\n      dbcat: new DB2(),\n      dbapp: new DB1(),\n      categories: {},\n      notes: {},\n      catsections: [],\n      selected: (new Map(): Map<string, boolean>),\n    }\n    this.sectionsnotes = this.sectionsnotes.bind(this);\n    this.indicator11 = this.indicator11.bind(this);\n    this._renderitem = this._renderitem.bind(this);\n    this._onpressitem = this._onpressitem.bind(this);\n  }\n  static contextTypes = {\n    router: () => null, // replace with PropTypes.object if you use them\n  }\n  async componentDidMount() {\n    const notes = await this.state.dbapp.getallnotes();\n    const categories = await this.state.dbcat.getcategories();\n    const catvalues = Object.values(categories);\n    const notvalues = Object.values(notes);\n    let searray = [\n      // {title: 'section11', data: ['a11', 'b11', 'c11']},\n      // {title: 'section12', data: ['a12', 'b12', 'c12']}\n    ];\n    console.log('chooselocedit;did;catvalues=', catvalues);\n    catvalues.forEach((c) => {\n      const titlehere = c.title;\n      let notesarray = [];\n      notvalues.forEach((n) => {\n        if (c.title === n.category) {\n          notesarray = [...notesarray, n]; // for obj as item\n        }\n      });\n      let obj = {title: titlehere, data: notesarray};\n      searray.push(obj);\n    });\n    \n    this.setState({\n      categories,\n      catsections: searray\n    });\n}\n  \n  indicator11 = () => this.state.loading ? \n    (<ActivityIndicator size=\"large\" color=\"#f000ff\" animating />)\n    : null\n    ;\n  sectionsnotes() {\n    const a = Object.values(this.state.categories);\n    // const b = Object.values(this.state.notes);\n    // const b = a.map((c) => c.title);\n    let searray = [\n      // {title: 'section11', data: ['a11', 'b11', 'c11']},\n      // {title: 'section12', data: ['a12', 'b12', 'c']}\n    ];\n    a.forEach((c) => {\n      const titlehere = c.title;\n      console.log('sectionsnotes;title=', titlehere);\n      const arr = c.map((n) => n.title);\n      const obj = {title: c.title, data: arr};\n      searray.push(obj);\n      // console.log('pages/sectionlist;sectionsnotes; newobj=', obj);\n    });\n    return searray;\n  }\n  _onpressitem = (id) => {\n    console.log('chooselocedit;_onpressitem;id=', id);\n    // updater functions are preferred for transactional updates\n    this.setState((state) => {\n      // copy the map rather than modifying state\n      const selected = new Map(state.selected);\n      selected.set(id, !selected.get(id)); // toggle\n      return {selected};\n    })\n  };\n  _renderitem = ({item, index}) => {\n    // console.log('chooselocedit;chooselocedit;_renderitem; index=', index);\n    return (\n      <Listitemloc\n        myindex={index}\n        id={item._id}\n        onpressitem={this._onpressitem}\n        selected={!!this.state.selected.get(item._id)}\n        title={item.title}\n    />\n    );\n  } ;\n  renderme1 = (text1) => (<Text>{text1}</Text>);\n  render() {\n    return (\n      <fieldset style={{display: 'flex'}}>\n        <legend>\n        <Button variant=\"contained\"  \n            onClick={this.context.router.history.goBack}\n            style={{backgroundColor: 'rgb(45,65, 100)',\n            borderRadius: '0.3em',\n            color: 'white',\n            padding: '0.1em 0.3em',\n            textDecorationLine: 'none'}} >\n          <ArrowBackIcon />back\n        </Button> &nbsp;\n            pages/chooseloceditjs</legend>\n        <View style={styles.box}>\n          <Text style={styles.textunder}>Choose a Location for editing\n          </Text>\n          {/** renderItem={({item}) => this._renderitem({item, index})} \n            before: <Text key={index}>{item}</Text>\n        */}\n        <View style={{flex:1}}>\n          <ScrollView >\n               <SectionList\n                  style={{height: '100em'}}\n                  renderItem={({item, index, section}) => \n                    this._renderitem({item, index})\n                  }\n                  renderSectionHeader={({section: {title}}) => (\n                    <Text style={{\n                        marginBottom: '0.5em',\n                        fontWeight: 'bold', \n                        textDecorationLine: 'underline',\n                        color: 'rgb(199, 213, 237)'}}>\n                      {title}\n                    </Text>\n                  )}\n                  sections={this.state.catsections}\n                  keyExtractor={(item, index) => item + index}\n                />\n          </ScrollView>\n       \n        </View>\n         \n        </View>\n        \n      </fieldset>\n      \n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  box: { \n      borderRadius: '0.3em',\n      padding: 10,\n      backgroundColor: 'rgba(125, 125, 100, 0.88)'\n      },\n  text: { fontWeight: 'bold', color: '#ffffff' },\n  textunder: { \n     fontSize: '1.16em',\n     fontWeight: 'bold',\n     color: '#ffffff',\n     textDecorationLine: \"underline\",\n     marginBottom: '0.5em' }\n});\nexport default Chooselocedit;\n\n/**\n stackoverflow react native\nconstructor(props){\n   super(props);\n   this.onMenuPress = this.onMenuPress.bind(this);\n}\nonMenuPress(item){\n   console.log(item);\n   this.props.navigation.navigate(\"some_route\");\n}\n\nrender() {\n.....some code\n    <ListItem onPress={(item) => this.onMenuPress(item)}>\n....more code\n}\ncatlist\nnotvalues.map((n) =>\n<Link style={{padding: '0.3em 0.8em 0.3em 0.8em '}}\n            to={`/notes/${n._id}`} > {n.title}\n  );\n */","import React from 'react';\n// import PropTypes from 'prop-types';\n// import { connect } from 'react-redux';\nimport { StyleSheet, Text, View, SectionList,\n  ActivityIndicator, TouchableOpacity,\n  ScrollView } from 'react-native';\nimport DB2 from '../db2';\nimport DB1 from '../db1';\nimport { Link } from 'react-router-dom';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport Button from '@material-ui/core/Button';\n\nclass Listitemloc extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.onpress = this.onpress.bind(this);\n  }\n  onpress = () => {\n    this.props.onpressitem(this.props._id);\n  }\n  render() {\n    const textcolor = this.props.selected ? \"red\" : \"black\";\n    console.log('chooselocremove;listitem1;render.props.id=', this.props.id);\n    return (\n      // className=\"navbar\"\n      <TouchableOpacity onPress={this.onpress}>\n        <View>\n          <Text style={{ color: textcolor }} key={this.props.myindex}>\n            <Text className=\"navbar\">\n              <Link to={`/locremove/${this.props.id}`} \n                 style={{padding:'0.1em 0.7em', \n                 fontWeight: 'bold',\n                 fontSize: '1.16em'}} > \n                {this.props.title}</Link>\n            </Text>\n            \n          </Text>\n        </View>\n      </TouchableOpacity>\n    );\n  }\n}\nclass chooselocremove extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state =  {\n      dbcat: new DB2(),\n      dbapp: new DB1(),\n      categories: {},\n      notes: {},\n      catsections: [],\n      selected: (new Map(): Map<string, boolean>),\n    }\n    this.sectionsnotes = this.sectionsnotes.bind(this);\n    this.indicator11 = this.indicator11.bind(this);\n  }\n  static contextTypes = {\n    router: () => null, // replace with PropTypes.object if you use them\n  }\n  async componentDidMount() {\n    const notes = await this.state.dbapp.getallnotes();\n    const categories = await this.state.dbcat.getcategories();\n    const catvalues = Object.values(categories);\n    const notvalues = Object.values(notes);\n    let searray = [\n      // {title: 'section11', data: ['a11', 'b11', 'c11']},\n      // {title: 'section12', data: ['a12', 'b12', 'c12']}\n    ];\n    console.log('chooselocremove;did;catvalues=', catvalues);\n    catvalues.forEach((c) => {\n      const titlehere = c.title;\n      let notesarray = [];\n      notvalues.forEach((n) => {\n        if (c.title === n.category) {\n          notesarray = [...notesarray, n]; // for obj as item\n        }\n      });\n      let obj = {title: titlehere, data: notesarray};\n      searray.push(obj);\n    });\n    \n    this.setState({\n      categories,\n      catsections: searray\n    });\n}\n  \n  indicator11 = () => this.state.loading ? \n    (<ActivityIndicator size=\"large\" color=\"#f000ff\" animating />)\n    : null\n    ;\n  sectionsnotes() {\n    const a = Object.values(this.state.categories);\n    // const b = Object.values(this.state.notes);\n    // const b = a.map((c) => c.title);\n    let searray = [\n      // {title: 'section11', data: ['a11', 'b11', 'c11']},\n      // {title: 'section12', data: ['a12', 'b12', 'c']}\n    ];\n    a.forEach((c) => {\n      const titlehere = c.title;\n      console.log('chooselocremove;title=', titlehere);\n      const arr = c.map((n) => n.title);\n      const obj = {title: c.title, data: arr};\n      searray.push(obj);\n      // console.log('pages/sectionlist;sectionsnotes; newobj=', obj);\n    });\n    return searray;\n  }\n  _onpressitem = (id) => {\n    // updater functions are preferred for transactional updates\n    this.setState((state) => {\n      // copy the map rather than modifying state\n      const selected = new Map(state.selected);\n      selected.set(id, !selected.get(id)); // toggle\n      return {selected};\n    })\n  };\n  _renderitem = ({item, index}) => (\n    <Listitemloc\n      myindex={index}\n      id={item._id}\n      onpressitem={this._onpressitem}\n      selected={!!this.state.selected.get(item._id)}\n      title={item.title}\n  />\n  );\n  renderme1 = (text1) => (<Text>{text1}</Text>);\n  render() {\n    return (\n      <fieldset style={{display: 'flex'}}>\n        <legend>\n        <Button variant=\"contained\"  \n            onClick={this.context.router.history.goBack}\n            style={{backgroundColor: 'rgb(45,65, 100)',\n            borderRadius: '0.3em',\n            color: 'white',\n            padding: '0.1em 0.3em',\n            textDecorationLine: 'none'}} >\n          <ArrowBackIcon />back\n        </Button> &nbsp;\n            pages/chooselocremovejs</legend>\n        <View style={styles.box}>\n          <Text style={styles.textunder}>Choose a Location for removing\n          </Text>\n          {/** renderItem={({item}) => this._renderitem({item, index})} \n            before: <Text key={index}>{item}</Text>\n          */}\n            <View style={{flex:1}}>\n              <ScrollView >\n                  <SectionList\n                      style={{height: '100em'}}\n                      renderItem={({item, index, section}) => \n                        this._renderitem({item, index})\n                      }\n                      renderSectionHeader={({section: {title}}) => (\n                        <Text style={{\n                            marginBottom: '0.5em',\n                            fontWeight: 'bold', \n                            textDecorationLine: 'underline',\n                            color: 'rgb(199, 213, 237)'}}>\n                          {title}\n                        </Text>\n                      )}\n                      sections={this.state.catsections}\n                      keyExtractor={(item, index) => item + index}\n                    />\n              </ScrollView>\n            </View>\n        </View> \n      </fieldset>\n      \n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  box: { \n      borderRadius: '0.3em',\n      padding: 10,\n      backgroundColor: 'rgba(125, 125, 100, 0.88)'\n      },\n  text: { fontWeight: 'bold', color: '#ffffff' },\n  textunder: { \n     fontSize: '1.16em',\n     fontWeight: 'bold',\n     color: '#ffffff',\n     textDecorationLine: \"underline\",\n     marginBottom: '0.5em' }\n});\nexport default chooselocremove;\n\n/**\n stackoverflow react native\nconstructor(props){\n   super(props);\n   this.onMenuPress = this.onMenuPress.bind(this);\n}\nonMenuPress(item){\n   console.log(item);\n   this.props.navigation.navigate(\"some_route\");\n}\n\nrender() {\n.....some code\n    <ListItem onPress={(item) => this.onMenuPress(item)}>\n....more code\n}\ncatlist\nnotvalues.map((n) =>\n<Link style={{padding: '0.3em 0.8em 0.3em 0.8em '}}\n            to={`/notes/${n._id}`} > {n.title}\n  );\n  /locremove/${this.props.id}\n */","import React from 'react';\nimport { Link } from 'react-router-dom';\n\n class Catlistedit extends React.Component {\n   constructor(props) {\n     super(props);\n     this.rendernotes = this.rendernotes.bind(this);\n   }\n  rendernotes() {\n    const a1 = Object.values(this.props.notes);\n  return  a1.map((n) => \n      <fieldset key={n._id}>\n        <legend>components/catlisteditjs</legend>\n        <h4 className=\"navbar\">\n          <Link style={{padding: '0.3em 0.8em 0.3em 0.8em '}}\n            to={`/notes/${n._id}`} > {n.title}\n          </Link>\n        </h4>\n      </fieldset>);\n    \n  }\n   render() {\n     return (\n       <div>\n         { this.rendernotes() }\n       </div>\n     );\n   }\n}\nexport default Catlistedit;","// like ./index.js\n// from pages/showcategory2\nimport React from 'react';\nimport Catlistedit from '../components/catlistedit';\nimport '../App.css';\nimport { StyleSheet,  Text, View } from 'react-native';\n// import { Link } from 'react-router-dom';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport Button from '@material-ui/core/Button';\nimport {  Link } from 'react-router-dom';\nimport Landscape   from '@material-ui/icons/Landscape';\nimport DB1 from '../db1';\n\nclass Editcat extends React.Component {\n  constructor(props) {\n    super(props);\n    console.log('editcat;constructor;props=', this.props);\n    this.mounted = false;\n    this.state =  {\n      note: {\n        _id: '',\n        _rev: '',\n        title: '',\n        createdat: this.props.cat.createdat,\n        uddatedat: new Date()\n      },\n      db1: new DB1(),\n      catnotes: {},\n      loading: true\n    }\n    this.handlesave = this.handlesave.bind(this);\n    this.updatevalue = this.updatevalue.bind(this);\n  }\n  static contextTypes = {\n    router: () => null, // replace with PropTypes.object if you use them\n  }\n  async componentDidMount() {\n    this.mounted = true;\n    // let catlist = await this.state.db1.getcatnotesdb(this.props.cat);\n    const catlist = await this.state.db1.getcategory(this.props.cat);\n    console.log('editcat;did;catlist=', catlist);\n    this.mounted && this.setState({\n      catnotes: catlist,\n      note: this.props.cat,\n      loading: false\n    });\n  }\n  updatevalue = (e) => {\n   // console.log('editcat;update;e.target=', e.target);\n    const { note } = this.state;\n    this.setState({\n      note: { ...note, [e.target.name]: e.target.value }\n    });\n  }\n  handlesave = async (e) => {\n    e.preventDefault();\n   // console.log('editcat;handlesave;e=', e);\n    const notesarray = Object.values(this.state.catnotes);\n    console.log('editcat;handlesave;before notesarray=', notesarray);\n    notesarray.forEach(n => {\n      n.category =  this.state.note.title;\n    });\n    console.log('editcat;handlesave;thisstatenote=', this.state.note);\n    console.log('editcat;handlesave;after notesarray=', notesarray);\n    await this.props.onsaveedit(this.state.note, \n        notesarray);\n    this.props.history.replace(`/sectionlist`);\n  }\n   render() {\n       // const a11 = Object.values(this.state.catnotes);\n       let n = this.state.note;\n       console.log('editcat;render;n=', n);\n       return (\n           <fieldset >\n              <legend>\n              <Button variant=\"contained\"  \n                onClick={this.context.router.history.goBack}\n                style={{backgroundColor: 'rgb(45,65, 100)',\n                borderRadius: '0.3em',\n                color: 'white',\n                padding: '0.1em 0.3em',\n                textDecoration: 'none',\n                textDecorationColor: 'blue'}} >\n                <ArrowBackIcon />back\n              </Button> &nbsp;\n                pages/editcatjs\n              </legend> \n              <h2>Edit Category with Reactjs</h2>\n              <View style={styles.box}>\n                <Text style={styles.text}>\n                  and here is a Insert of Native\n                </Text>\n              </View>\n                 <h2><span style={{fontSize: '0.7em'}}>category:</span>\n                   {this.props.cat.title}</h2>\n                 <form onSubmit={this.handlesave}>\n                <div className=\"noteformfield\"\n                  style={{display: 'flex',flexDirection: 'row', alignItems: 'center'}}>\n                 <label>Edit</label>\n                 <input type=\"text\" name=\"title\"  required\n                   autoFocus={true}\n                   placeholder={this.props.cat.title}\n                   value={this.state.note.title}\n                   style={{fontWeight: 'bold', fontSize: '1.1em'}}\n                   onChange={this.updatevalue} />\n                </div>\n                <div className=\"noteformbuttons\">\n                  <button className=\"btn\">Save</button>\n                  <Link to=\"/sectionlist\" >\n                    <Button variant=\"contained\"  \n                       style={{backgroundColor: 'rgb(125, 62, 90)',\n                        borderRadius: '0.3em',\n                        color: 'white',\n                        padding: '0.1em 0.3em',\n                        textDecoration: 'none'}} >\n                      <Landscape />Cansel\n                    </Button>\n                  </Link>\n                  \n                </div>\n              </form>\n               <Catlistedit notes={this.state.catnotes} />\n               \n           </fieldset>\n       );\n   }\n}\nconst styles = StyleSheet.create({\n  box: { \n      borderRadius: '0.3em',\n      padding: 10,\n      backgroundColor: 'rgba(125, 125, 100, 0.88)'\n      },\n  text: { fontWeight: 'bold', color: '#ffffff', textAlign: 'center' },\n  textunder: { fontWeight: 'bold', color: '#ffffff', \n  textDecorationLine: \"underline\" }\n});\nexport default Editcat;\n","import React from 'react';\nimport {  Link } from 'react-router-dom';\nimport '../App.css';\nimport DB1 from '../db1';\nimport DB2 from '../db2';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport Button from '@material-ui/core/Button';\nimport Landscape   from '@material-ui/icons/Landscape';\n\nclass Editpage extends React.Component {\n  constructor(props) {\n    super(props);\n    console.log('editreact;editpage;constructor');\n    this.mounted = false;\n    this.handlesaveedit = this.handlesaveedit.bind(this);\n    this.state = {\n      dbloc: new DB1(),\n      note:  {\n        _id: '',\n        title: '',\n        body: '',\n        alat: '',\n        alng: '',\n        category: '',\n        createdat: this.props.noteloc.createdat,\n        updatedat: new Date(),\n   },\n      dbcateg: new DB2(),\n      categories: {},\n      loading: true\n  }\n  }\n  static contextTypes = {\n    router: () => null, // replace with PropTypes.object if you use them\n  }\n    async componentDidMount() {\n      this.mounted = true;\n      console.log('editreact;did;this.props.noteloc', \n        this.props.noteloc);\n      let onenote = this.props.noteloc;\n      // const a = this.props.noteloc._id;\n      // const onenote = await this.state.dbloc.getnote(a);\n      // console.log('editreact;did;onenote=', onenote);\n      const b = await this.state.dbcateg.getcategories();\n      this.mounted && this.setState({\n          categories: b,\n          note: onenote,\n          loading: false\n      });\n    }\n    componentWillUnmount() {\n      this.mounted = false;\n    }\n    updatevalue = (e) => {\n      const { note } = this.state;\n      this.setState({\n        note: { ...note, [e.target.name]: e.target.value }\n      });\n    }\n    handlesaveedit = async (e) => {\n      let a = this.state.note;\n      console.log('editreact;handlesave')\n      e.preventDefault();\n      console.log('editreactjs;handlesave;note', this.state.note)\n      await this.props.onsaveedit(this.state.note);\n      this.props.history.replace(`/notes/${ a._id }`);\n    }\n    render() {\n        const { note } = this.state;\n        const  loc  = this.props.noteloc;\n        const a = Object.values(this.state.categories);\n        a.sort(function (aaa, bbb) {\n          let textA = aaa.title.toUpperCase();\n          let textB = bbb.title.toUpperCase();\n          return textA.localeCompare(textB);\n        });\n        // const postitems = a.map((n) => n.title);\n        const optioni = a.map(c =>\n          <option key={c._id} value={c.title}>{c.title}</option>\n        );\n        return (\n            <fieldset className=\"noteform\">\n              <legend>\n              <Button variant=\"contained\"  \n                    onClick={this.context.router.history.goBack}\n                    style={{backgroundColor: 'rgb(45,65, 100)',\n                    borderRadius: '0.3em',\n                    color: 'white',\n                    padding: '0.1em 0.3em',\n                    textDecoration: 'none',\n                    textDecorationColor: 'blue'}} >\n                  <ArrowBackIcon />back\n                </Button> &nbsp;\n                pages/editreactjs/Editpage</legend> \n              <h2>Edit Location</h2>\n              <form onSubmit={this.handlesaveedit}>\n                <div className=\"noteformfield\"\n                  style={{display: 'flex',flexDirection: 'row', alignItems: 'center'}}>\n                 <label>Name</label>\n                 <input type=\"text\" name=\"title\"  required\n                   placeholder={loc.title}\n                   value={note.title}\n                   style={{fontWeight: 'bold', fontSize: '1.1em'}}\n                   onChange={this.updatevalue} />\n                </div>\n                <div className=\"noteformfield noteformfieldtext\"\n                  style={{display: 'flex',flexDirection: 'row'}} >\n                  <label>Address</label>\n                  <textarea name=\"body\" required\n                    placeholder={loc.body}\n                    value={note.body} \n                    style={{fontWeight: 'bold', fontSize: '1.1em'}}\n                    onChange={this.updatevalue} />\n                </div>\n                <div className=\"noteformfield\" \n                  style={{display: 'flex',flexDirection: 'row', alignItems: 'center'}}>\n                 <label>Latitude</label>\n                 <input type=\"number\" name=\"alat\" step='any' required\n                   placeholder={loc.alat}\n                   value={note.alat}\n                   style={{fontWeight: 'bold', fontSize: '1.1em'}}\n                   onChange={this.updatevalue} />\n                </div>\n                <div className=\"noteformfield\" \n                  style={{display: 'flex',flexDirection: 'row', alignItems: 'center'}}>\n                 <label>Longitude</label>\n                 <input type=\"number\" name=\"alng\" step='any' required\n                   placeholder={loc.alng}\n                   value={note.alng}\n                   style={{fontWeight: 'bold', fontSize: '1.1rem'}}\n                   onChange={this.updatevalue} />\n                </div>\n                <div className=\"noteformfield\"\n                  style={{display: 'flex',flexDirection: 'row', alignItems: 'center'}}>\n                  <label>Category</label>\n                \n                  <select required id=\"idcategory\" name=\"category\" \n                    value={note.category}\n                    onChange={this.updatevalue} >\n                     <option value=\"\" >choose an option</option>\n                    {optioni}\n                  </select >\n                </div>\n                <div className=\"noteformbuttons\">\n                  <button className=\"btn\">Save</button>\n                  <Link to=\"/\" >\n                    <Button variant=\"contained\"  \n                       style={{backgroundColor: 'rgb(125, 62, 90)',\n                        borderRadius: '0.3em',\n                        color: 'white',\n                        padding: '0.1em 0.3em',\n                        textDecoration: 'none'}} >\n                      <Landscape />\n                      Cansel\n                    </Button>\n                  </Link>\n                  \n                </div>\n              </form>\n            </fieldset>\n        );\n\n    }\n}\n\nexport default Editpage;\n/**\n  {\n        _id: this.props.noteloc._id,\n        title: this.props.noteloc.title,\n        body: this.props.noteloc.body,\n        alat: this.props.noteloc.alat,\n        alng: this.props.noteloc.alng,\n        category: this.props.noteloc.category,\n        createdat: this.props.noteloc.createdat,\n        updatedat: new Date(),\n   }  \n */","import React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\n\nclass Hellonative extends React.Component {\n  render() {\n    return (\n      <fieldset>\n        <legend>hellonative.js</legend>\n        <View style={styles.box}>\n          <Text style={styles.text}>Hello, world!</Text>\n      </View>\n      </fieldset>\n      \n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  box: { padding: 10 },\n  text: { fontWeight: 'bold' }\n});\nexport default Hellonative;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\n class Notelist2 extends React.Component {\n  rendernotes() {\n    const a1 = Object.values(this.props.notes);\n  return  a1.map((n) => \n      <fieldset key={n._id} style={{\n        backgroundColor: 'rgba(88, 110, 88, 0,26)',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center'\n        }}>\n        <legend>components/notelist2js</legend>\n        <div className=\"navbar\">\n          <Link to={`/notes/${n._id}`}\n          style={{fontSize: '1.25em',\n             fontWeight: 'bold'}}\n           > {n.title}</Link>\n        </div>\n      </fieldset>);\n    \n  }\n   render() {\n     return (\n       <div>\n         { this.rendernotes() }\n       </div>\n     );\n   }\n}\nexport default Notelist2;","import React from 'react';\nimport Notelist2 from '../components/notelist2';\nimport '../App.css';\n// import ArrowBackIcon from '@material-ui/icons/ArrowBack';\n// import Button from '@material-ui/core/Button';\n\nexport default class Indexpage extends React.Component {\n    // static contextTypes = {\n    //     router: () => null, // replace with PropTypes.object if you use them\n    //   }\n   render() {\n       const a11 = Object.values(this.props.notes);\n       return (\n           <fieldset className=\"styleindex\">\n               <legend>\n                 {/* is not working\n                 <Button variant=\"contained\"  \n                      onClick={this.context.router.history.goBack}\n                      style={{backgroundColor: 'rgb(45,65, 100)',\n                      borderRadius: '0.3em',\n                      color: 'white',\n                      padding: '0.1em 0.3em',\n                      textDecoration: 'none',\n                      textDecorationColor: 'blue'}} >\n                    <ArrowBackIcon />back\n                 </Button> &nbsp; */}\n                 pages/index.js:notes \n               </legend>\n               <h2>All the Locations</h2>\n               <Notelist2 notes={a11} />\n           </fieldset>\n       );\n   }\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport HomeIcon from '@material-ui/icons/Home';\nimport Button from '@material-ui/core/Button';\n\nexport default class Navbar2 extends React.Component {\n    render() {\n        return (\n           <nav className=\"navbar navbarbackground\">navbar2.js\n             <h2><Link to=\"/\" style={{background: 'inherit'}}>\n               <Button variant=\"contained\"  style={{backgroundColor: 'rgb(45,65, 100)',\n                        borderRadius: '0.3em',\n                        color: 'white',\n                        padding: '0.1em 0.3em',\n                        textDecoration: 'none'}} >\n                  <HomeIcon />ReactLocations\n                </Button>\n              </Link></h2>\n             <div className=\"navbarbuttons\">\n               <Link to=\"/new\" className=\"btn\">New Location</Link>\n             </div>\n             <div className=\"navbarbuttons\">\n               <Link to=\"/chooselocedit\" className=\"btn\">Edit Location</Link>\n             </div>\n             <div className=\"navbarbuttons\">\n               <Link to=\"/chooselocremove\" className=\"btn\">Remove Location</Link>\n             </div>\n             <div className=\"navbarbuttons\">\n               <Link to=\"/newcategory\" className=\"btn\">New Category</Link>\n             </div>\n             <div className=\"navbarbuttons\">\n               <Link to=\"/choosecatedit\" className=\"btn\">Edit Category</Link>\n             </div>\n           </nav>\n        );\n    }\n}","import React from 'react';\nimport {  Link } from 'react-router-dom';\nimport '../App.css';\nimport Button from '@material-ui/core/Button';\nimport Landscape   from '@material-ui/icons/Landscape';\n\n class Newcategory extends React.Component {\n     constructor(props) {\n        super(props);\n        this.state = {\n            note: {\n              title: '',\n              createdat: undefined,\n              updatedat: undefined\n            }\n        }\n        this.handlesave = this.handlesave.bind(this);\n        this.updatevalue = this.updatevalue.bind(this);\n     }\n    updatevalue = (e) => {\n      const { note } = this.state;\n      this.setState({\n        note: { ...note, [e.target.name]: e.target.value }\n      });\n    }\n    handlesave = async (e) => {\n      e.preventDefault();\n      const id = await this.props.onsave(this.state.note);\n      this.props.history.replace(`/categories/${ id }`);\n    }\n    render() {\n        // const { note } = this.state;\n       \n        return (\n            <fieldset className=\"noteform\">\n              <legend>pages/newcategoryjs</legend> \n              <h2>New Category</h2>\n              <form onSubmit={this.handlesave}>\n                <div className=\"noteformfield\"\n                  style={{display: 'flex',flexDirection: 'row', alignItems: 'center'}}>\n                 <label>Name</label>\n                 <input type=\"text\" name=\"title\"  required\n                   placeholder=\"Name\"\n                   value={this.state.note.title}\n                   style={{fontWeight: 'bold', fontSize: '1.1em'}}\n                   onChange={this.updatevalue} />\n                </div>\n                <div className=\"noteformbuttons\">\n                  <button className=\"btn\">Save</button>\n                  <Link to=\"/\" >\n                    <Button variant=\"contained\"  \n                       style={{backgroundColor: 'rgb(125, 62, 90)',\n                        borderRadius: '0.3em',\n                        color: 'white',\n                        padding: '0.1em 0.3em',\n                        textDecoration: 'none'}} >\n                      <Landscape />\n                      Cansel\n                    </Button>\n                  </Link>\n                  \n                </div>\n              </form>\n            </fieldset>\n        );\n\n    }\n}\n\nexport default Newcategory;","import React from 'react';\nimport {  Link } from 'react-router-dom';\nimport '../index.css';\nimport Button from '@material-ui/core/Button';\nimport Landscape   from '@material-ui/icons/Landscape';\nimport DB2 from '../db2';\n\nclass Newlocation extends React.Component {\n  constructor(props) {\n      super(props);\n      this.mounted = false;\n      this.state = {\n        note: {\n          title: '',\n          body: '',\n          alat: '',\n          alng: '',\n          category: undefined,\n          createdat: undefined,\n          updatedat: undefined,\n          _id: ''\n        },\n        dbcateg: new DB2(),\n        categories: {},\n        loading: true\n      }\n    this.updatevalue = this.updatevalue.bind(this);\n    this.handlesave = this.handlesave.bind(this);\n  }\n \n  async componentDidMount () {\n    this.mounted = true;\n    const a = await this.state.dbcateg.getcategories();\n    this.mounted && this.setState({\n        categories: a,\n        loading: false\n    });\n  } // didmount\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n    updatevaluetitle = (e) => {\n      const { note } = this.state;\n      // const id1 = e.target.value + Date.now();\n      this.setState({\n        ...note,\n        [e.target.name]: e.target.value,\n        _id: e.target.value \n      });\n    }\n    updatevalue = (e) => {\n      const { note } = this.state;\n      this.setState({\n        note: { ...note, [e.target.name]: e.target.value }\n      });\n    }\n    handlesave = async (e) => {\n      e.preventDefault();\n      const id = await this.props.onsave(this.state.note);\n      this.props.history.replace(`/notes/${ id }`);\n    }\n    render() {\n        const { note } = this.state;\n        const a = Object.values(this.state.categories);\n        a.sort(function (aaa, bbb) {\n          let textA = aaa.title.toUpperCase();\n          let textB = bbb.title.toUpperCase();\n          return textA.localeCompare(textB);\n        });\n        // const postitems = a.map((n) => n.title);\n        const optioni = a.map(c =>\n          <option key={c._id} value={c.title}>{c.title}</option>\n        );\n        return (\n            <fieldset className=\"noteform\">\n              <legend>newlocationjs</legend> \n              <h2>Add Location</h2>\n              <form onSubmit={this.handlesave}>\n                <div className=\"noteformfield\"\n                  style={{display: 'flex',flexDirection: 'row', alignItems: 'center'}}>\n                 <label>Name</label>\n                 <input type=\"text\" name=\"title\"  required\n                   placeholder=\"Name\"\n                   value={note.title}\n                   style={{fontWeight: 'bold', fontSize: '1.1em'}}\n                   onChange={this.updatevalue} />\n                </div>\n                <div className=\"noteformfield noteformfieldtext\"\n                  style={{display: 'flex',flexDirection: 'row'}} >\n                  <label>Address</label>\n                  <textarea name=\"body\" required\n                    placeholder=\"Address\"\n                    value={note.body} \n                    style={{fontWeight: 'bold', fontSize: '1.1em'}}\n                    onChange={this.updatevalue} />\n                </div>\n                <div className=\"noteformfield\" \n                  style={{display: 'flex',flexDirection: 'row', alignItems: 'center'}}>\n                 <label>Latitude</label>\n                 <input type=\"number\" name=\"alat\" step='any' required\n                   placeholder=\"Latitude\"\n                   value={note.alat}\n                   style={{fontWeight: 'bold', fontSize: '1.1em'}}\n                   onChange={this.updatevalue} />\n                </div>\n                <div className=\"noteformfield\" \n                  style={{display: 'flex',flexDirection: 'row', alignItems: 'center'}}>\n                 <label>Longitude</label>\n                 <input type=\"number\" name=\"alng\" step='any' required\n                   placeholder=\"Longitude\"\n                   value={note.alng}\n                   style={{fontWeight: 'bold', fontSize: '1.1rem'}}\n                   onChange={this.updatevalue} />\n                </div>\n                <div className=\"noteformfield\"\n                  style={{display: 'flex',flexDirection: 'row', alignItems: 'center'}}>\n                  <label>Category</label>\n                  <select required id=\"idcategory\" name=\"category\" \n                    value={note.category}\n                    onChange={this.updatevalue} >\n                     <option value=\"\" >choose an option</option>\n                    {optioni}\n                  </select >\n                </div>\n                <div className=\"noteformbuttons\">\n                  <button className=\"btn\">Save</button>\n                  <Link to=\"/\" >\n                    <Button variant=\"contained\"  \n                       style={{backgroundColor: 'rgb(125, 62, 90)',\n                        borderRadius: '0.3em',\n                        color: 'white',\n                        padding: '0.1em 0.3em',\n                        textDecoration: 'none'}} >\n                      <Landscape />\n                      Cansel\n                    </Button>\n                  </Link>\n                  \n                </div>\n              </form>\n            </fieldset>\n        );\n\n    }\n}\nexport default Newlocation;\n\n/**\n  <option value=\"\" >choose an option</option>\n  <option value=\"tel aviv\" >Tel Aviv</option>\n  <option value=\"shopping\" >shopping</option>\n  <option value=\"shaping\" >shaping</option>\n  <option value=\"rishon leZion\">Rishon leZion</option>\n */","import React from 'react';\n// import PropTypes from 'prop-types';\n// import { connect } from 'react-redux';\nimport { StyleSheet, Text, View, SectionList, ScrollView,\n  ActivityIndicator, TouchableOpacity } from 'react-native';\n// import { any } from 'prop-types';\nimport DB2 from '../db2';\nimport DB1 from '../db1';\nimport { Link } from 'react-router-dom';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport Button from '@material-ui/core/Button';\n\nclass Listitemloc extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.onpress = this.onpress.bind(this);\n  }\n  onpress = () => {\n    this.props.onpressitem(this.props._id);\n  }\n  render() {\n    const textcolor = this.props.selected ? \"red\" : \"black\";\n    console.log('categornative;listitem1;render,props=', this.props);\n    return (\n      // className=\"navbar\"\n      <TouchableOpacity onPress={this.onpress}>\n        <View>\n          <Text style={{ color: textcolor }} key={this.props.myindex}>\n            <Text className=\"navbar\">\n              <Link to={`/notes/${this.props.id}`} \n                 style={{padding:'0.1em 0.7em', \n                 fontWeight: 'bold',\n                 fontSize: '1.16em'}} > \n                {this.props.title}</Link>\n            </Text>\n            \n          </Text>\n        </View>\n      </TouchableOpacity>\n    );\n  }\n}\nclass Sectionlist12 extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state =  {\n      dbcat: new DB2(),\n      dbapp: new DB1(),\n      categories: {},\n      notes: {},\n      catsections: [],\n      selected: (new Map(): Map<string, boolean>),\n    }\n    this.sectionsnotes = this.sectionsnotes.bind(this);\n    this.indicator11 = this.indicator11.bind(this);\n  }\n  static contextTypes = {\n    router: () => null, // replace with PropTypes.object if you use them\n  }\n  async componentDidMount() {\n    const notes = await this.state.dbapp.getallnotes();\n    const categories = await this.state.dbcat.getcategories();\n    const catvalues = Object.values(categories);\n    const notvalues = Object.values(notes);\n    let searray = [\n      // {title: 'section11', data: ['a11', 'b11', 'c11']},\n      // {title: 'section12', data: ['a12', 'b12', 'c12']}\n    ];\n    console.log('section;did;values=', catvalues);\n    catvalues.forEach((c) => {\n      const titlehere = c.title;\n      // console.log('sectionlist;did;c.title', c.title);\n      let notesarray = [];\n      notvalues.forEach((n) => {\n        // console.log('sectionlist;did;n.category=', n.category);\n        if (c.title === n.category) {\n  // notesarray = [...notesarray, n.title]; for plain text item\n          notesarray = [...notesarray, n]; // for obj as item\n        }\n      });\n      let obj = {title: titlehere, data: notesarray};\n      searray.push(obj);\n    });\n    \n     // const a = this.state.catsections.concat(this.sectionsnotes());\n    this.setState({\n      categories,\n      catsections: searray\n    });\n}\n  \n  indicator11 = () => this.state.loading ? \n    (<ActivityIndicator size=\"large\" color=\"#f000ff\" animating />)\n    : null\n    ;\n  sectionsnotes() {\n    const a = Object.values(this.state.categories);\n    // const b = Object.values(this.state.notes);\n    // const b = a.map((c) => c.title);\n    let searray = [\n      // {title: 'section11', data: ['a11', 'b11', 'c11']},\n      // {title: 'section12', data: ['a12', 'b12', 'c']}\n    ];\n    a.forEach((c) => {\n      const titlehere = c.title;\n      console.log('sectionsnotes;title=', titlehere);\n      const arr = c.map((n) => n.title);\n      const obj = {title: c.title, data: arr};\n      searray.push(obj);\n      // console.log('pages/sectionlist;sectionsnotes; newobj=', obj);\n    });\n    return searray;\n  }\n  _onpressitem = (id) => {\n    // updater functions are preferred for transactional updates\n    this.setState((state) => {\n      // copy the map rather than modifying state\n      const selected = new Map(state.selected);\n      selected.set(id, !selected.get(id)); // toggle\n      return {selected};\n    })\n  };\n  _renderitem = ({item, index}) => (\n    <Listitemloc\n      myindex={index}\n      id={item._id}\n      onpressitem={this._onpressitem}\n      selected={!!this.state.selected.get(item._id)}\n      title={item.title}\n  />\n  );\n  renderme1 = (text1) => (<Text>{text1}</Text>);\n  render() {\n    return (\n      <fieldset>\n        <legend>\n        <Button variant=\"contained\"  \n            onClick={this.context.router.history.goBack}\n            style={{backgroundColor: 'rgb(45,65, 100)',\n            borderRadius: '0.3em',\n            color: 'white',\n            padding: '0.1em 0.3em',\n            textDecorationLine: 'none'}} >\n          <ArrowBackIcon />back\n        </Button> &nbsp;\n            pages/sectionlist12.js</legend>\n        <View style={styles.box}>\n          <Text>React Native Style</Text>\n          <Text style={styles.textunder}>Locations by Categories\n          </Text>\n          {/** renderItem={({item}) => this._renderitem({item, index})} \n            before: <Text key={index}>{item}</Text>\n        */}\n          <View style={styles.container}>\n            <ScrollView>\n              <SectionList\n                style={{height: '100em'}}\n                renderItem={({item, index, section}) => \n                  this._renderitem({item, index})\n                }\n                renderSectionHeader={({section: {title}}) => (\n                  <Text style={{\n                      marginBottom: '0.5em',\n                      fontWeight: 'bold', \n                      textDecorationLine: 'underline',\n                      color: 'rgb(199, 213, 237)'}}>\n                    {title}\n                  </Text>\n                )}\n                sections={this.state.catsections}\n                keyExtractor={(item, index) => item + index}\n              />\n            </ScrollView>\n\n            \n          </View>\n          \n        </View>\n        \n      </fieldset>\n      \n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  box: { \n      borderRadius: '0.3em',\n      padding: 10,\n      backgroundColor: 'rgba(125, 125, 100, 0.88)'\n      },\n  text: { fontWeight: 'bold', color: '#ffffff' },\n  textunder: { fontSize: '1.16em',\n    fontWeight: 'bold',\n    color: '#ffffff',\n    textDecorationLine: \"underline\",\n    marginBottom: '0.5em'},\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    height: 'auto'\n  }\n  });\nexport default Sectionlist12;\n\n/**\n stackoverflow react native\nconstructor(props){\n   super(props);\n   this.onMenuPress = this.onMenuPress.bind(this);\n}\nonMenuPress(item){\n   console.log(item);\n   this.props.navigation.navigate(\"some_route\");\n}\n\nrender() {\n.....some code\n    <ListItem onPress={(item) => this.onMenuPress(item)}>\n....more code\n}\ncatlist\nnotvalues.map((n) =>\n<Link style={{padding: '0.3em 0.8em 0.3em 0.8em '}}\n            to={`/notes/${n._id}`} > {n.title}\n  );\n  scrollEnabled={true}\n */","import React, { Component } from 'react';\n// import PropTypes from 'prop-types';\n// import shouldPureComponentUpdate from 'react-pure-render/function';\nimport GoogleMapReact from 'google-map-react';\n// import Myplace from './myplace.js';\n\nconst Mymapcomponent = ({text}) => <div>{text}</div>;\n\nclass Googlemapreact extends Component {\n    static defaultProps = {\n        center: {\n            lat: '32.08',\n            lng: '34.78'\n        },\n        zoom: 17\n    };\n    render () {\n        const alat = parseFloat(this.props.alat);\n        const alng = parseFloat(this.props.alng);\n        const azoom = 17;\n\n        return (\n            // set the container height explicity\n            <div style={{ height: '50vh', width: '50%' }}>\n              <GoogleMapReact\n                bootstrapURLKeys={{ key: 'AIzaSyB_ZSdzmuDdhVLlTNypKYS7tuG_xns6IVU' }}\n                defaultCenter={[alat,alng]}\n                defaultZoom={azoom}\n              >\n                <Mymapcomponent \n                   lat={alat}\n                   lng={alng}\n                   text={'here'}\n                />\n              </GoogleMapReact>\n            </div>\n        );\n    }\n}\nexport default Googlemapreact;\n// defaultCenter={this.props.center}\n","import React from 'react';\nimport '../App.css';\n// import { Link } from 'react-router-dom';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport Button from '@material-ui/core/Button';\nimport Googlemapreact from '../googlemapreact/googlemapreact';\nimport { Vibration } from 'react-native';\n\n class Showpage extends React.Component {\n   constructor(props) {\n     super(props);\n     this.fvibration = this.fvibration.bind(this);\n   }\n   static contextTypes = {\n    router: () => null, // replace with PropTypes.object if you use them\n  }\n    fvibration() {\n        const DURATION = 1000\n        // const PATTERN = [1000, 2000, 3000]\n        \n        Vibration.vibrate(DURATION)\n        // Android: vibrate for 1s\n        // iOS: duration is not configurable, vibrate for fixed time (about 500ms)\n        // Vibration.vibrate(PATTERN)\n        // Android: wait 1s -> vibrate 2s -> wait 3s\n        // iOS: wait 1s -> vibrate -> wait 2s -> vibrate -> wait 3s -> vibrate\n        Vibration.cancel()\n        \n    }\n  \n    render() {\n        this.fvibration();\n        const { note } = this.props;\n        if (!note) { return null; }\n        return (\n            <fieldset style={{width: '80vw'}}>\n              <legend>\n              <Button variant=\"contained\"  \n                    onClick={this.context.router.history.goBack}\n                    style={{backgroundColor: 'rgb(45,65, 100)',\n                    borderRadius: '0.3em',\n                    color: 'white',\n                    padding: '0.1em 0.3em',\n                    textDecoration: 'none',\n                    textDecorationColor: 'blue'}} >\n                  <ArrowBackIcon />back\n                </Button> &nbsp;showjs:Showpage\n              </legend> \n              <div >\n                  <div>\n                    <h2>{ note.title }</h2>\n                    <div>address:{ note.body } </div>\n                    <div>coordinates:{note.alat},{note.alng}</div>\n                    <div>category:{ note.category }</div>\n                    <div>date: { note.updatedat.toString() }</div>\n                  </div>\n                  <div>\n                    <Googlemapreact \n                      alat={note.alat} alng={note.alng}/>\n                  </div>\n              </div>\n               \n            </fieldset>\n        );\n\n    }\n}\nexport default Showpage;","// to update the internal state as the result of a change in props\n// lifecycle componentWillReceiveProps was the only way  to update state\n// in response to a change in props without an additional render. \n// Since 16.3, a replacement lifecycle getDerivedStateFromProps, \n// solves the same case in a safer way.\n// getDerivedStateFromProps is invoked after a component is instatiated\n// as well as before it is re-rendered.It can return an object to update\n// state, or null to indicate that the new props do not require any state\n// udates.\n// When an instance is being created and inserted into the DOM:\n// constructor()\n// static getDerivedStateFromProps()\n// render()\n// componentDidMount()\n// When props is changed:These methods are called:\n// static getDerivedStateFromProps()\n// shouldComponentUpdate()\n// render()\n// getSnapshotBeforeUpdate()\n// componentDidUpdate()\n\nimport React from 'react';\nimport {  Link } from 'react-router-dom';\nimport '../App.css';\n// import DB1 from '../db1';\n// import DB2 from '../db2';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport Button from '@material-ui/core/Button';\nimport Landscape   from '@material-ui/icons/Landscape';\n\nclass Removepage2 extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mounted: false,\n      dbchanges: {},\n      note:  '',\n      after: false,\n      titletoremove: ''\n      //  , dbcateg: new DB2(),\n      //   categories: {},\n      //   loading: true\n    }\n    localStorage.setItem('afterremove', '0');\n    this.handleremove = this.handleremove.bind(this);\n    this.gracerfulunmount = this.gracerfulunmount.bind(this);\n  }\n  static contextTypes = {\n    router: () => null, // replace with PropTypes.object if you use them\n  }\n  gracerfulunmount(){\n    this.setState({mounted: false});\n    window.removeEventListener('beforeunload', \n      this.gracerfulunmount);\n    console.log('remove2;graceful;before history.replace');\n    this.props.history.replace('/sectionlist');\n  }\n  \n  static getDerivedStateFromProps(props, state) {\n    console.log('remove2;getderivedstate;props', props);\n    if (props.noteloc !== undefined) { \n      console.log('remove2;derived;props.noteloc=', props.noteloc);\n      localStorage.setItem('derivednull', 'false');\n      return props;\n    }else { \n      localStorage.setItem('derivednull', 'true');\n      return null; }\n  } \n\n \n    async componentDidMount() {\n      window.addEventListener('beforeunload', this.gracerfulunmount);\n      \n      }\n    \n    componentWillUnmount() {\n      this.setState({ mounted : false });\n      this.gracerfulunmount();\n      // avoid here \n   \n    }\n    equals(a, b) {\n    if  (a.noteloc === b.noteloc) { return true; }\n    else { return false; }\n    }\n  //   shouldComponentUpdate(nextProps, nextState){\n  //  // equals() is your implementation\n  //     return !equals(nextProps, this.props); \n  //  }\n    shouldComponentUpdate(nextProps, nextState) {\n      // render() will not be invoked if it returns false.\n      // if (this.state.note === '') {return true; }\n      let a = false;\n       if (nextProps.noteloc.title !== this.props.noteloc.title){ a = true; }\n       else { this.props.history.replace('/sectionlist'); }\n      return a;\n    }\n    componentDidUpdate() {\n      if(this.state.after) {\n        // this.state.dbchanges.cansel();\n        this.props.history.replace('/sectionlist');\n      } else {\n        this.setState({\n          after: true\n        });\n      }\n    }\n    handleremove = async (e) => {      \n      e.preventDefault();\n      let a = localStorage.getItem('afterremove');\n      console.log('remove2;handle;afterremove=', a);\n      if (a === '0') {\n        const anote = this.props.noteloc;\n        console.log('remove2;handleremove;note', anote)\n        const yes = await this.props.onremove(anote);\n        console.log('remove2;handleremove;yes=', yes);\n        localStorage.setItem('afterremove', '1');\n        await this.setState({ after: true });\n        this.props.history.replace('/sectionlist');\n      } else {\n        this.props.history.replace('/sectionlist');\n      }\n    \n    }\n    render() {\n      // const anote = this.state.note;\n      let a = localStorage.getItem('derivednull');\n      if (a === 'true') { \n        this.props.history.replace('/sectionlist'); \n        return (  <h2>Location was removed</h2> );\n      }\n      else {\n        const anote = this.props.noteloc;\n        console.log('remove2;render;anote=', anote);\n        return (\n          <fieldset className=\"noteform\">\n            <legend>\n            <Button variant=\"contained\"  \n                  onClick={this.context.router.history.goBack}\n                  style={{backgroundColor: 'rgb(45,65, 100)',\n                  borderRadius: '0.3em',\n                  color: 'white',\n                  padding: '0.1em 0.3em',\n                  textDecoration: 'none',\n                  textDecorationColor: 'blue'}} >\n                <ArrowBackIcon />back\n              </Button> &nbsp;\n              pages/remove2js/Removepage2</legend> \n            <h2>Remove Location</h2>\n            <form onSubmit={this.handleremove}>\n              <div className=\"noteformfield\"\n                  style={{display: 'flex',flexDirection: 'row', \n                  alignItems: 'center'}}>\n                <label>Name</label>\n                <input type=\"text\" name=\"title\"  \n                readOnly={true}\n                placeholder={anote.title}\n                value={anote.title}\n                style={{fontWeight: 'bold', fontSize: '1.1em'}}\n                />\n              </div>\n              <div className=\"noteformfield noteformfieldtext\"\n                style={{display: 'flex',flexDirection: 'row'}} >\n                <label>Address</label>\n                <textarea name=\"body\" \n                  readOnly={true}\n                  placeholder={anote.body}\n                  value={anote.body} \n                  style={{fontWeight: 'bold', fontSize: '1.1em'}}\n                  />\n              </div>\n              <div className=\"noteformfield\" \n                style={{display: 'flex',flexDirection: 'row', alignItems: 'center'}}>\n               <label>Latitude</label>\n               <input type=\"number\" name=\"alat\" step='any' \n                 readOnly={true}\n                 placeholder={anote.alat}\n                 value={anote.alat}\n                 style={{fontWeight: 'bold', fontSize: '1.1em'}}\n                 />\n              </div>\n              <div className=\"noteformfield\" \n                style={{display: 'flex',flexDirection: 'row', \n                alignItems: 'center'}}>\n               <label>Longitude</label>\n               <input type=\"number\" name=\"alng\" step='any'\n                 readOnly={true} \n                 placeholder={anote.alng}\n                 value={anote.alng}\n                 style={{fontWeight: 'bold', fontSize: '1.1rem'}}\n                 />\n              </div>\n              <div className=\"noteformfield\"\n                style={{display: 'flex',flexDirection: 'row', \n                alignItems: 'center'}}>\n                <label>Category</label>\n              \n                <select id=\"idcategory\" name=\"category\" >\n                   <option value=\"\" >{anote.category}</option>\n                </select >\n              </div>\n              <div className=\"noteformbuttons\">\n                <button className=\"btn\">Remove</button>\n                <Link to=\"/sectionlist\" >\n                  <Button variant=\"contained\"  \n                     style={{backgroundColor: 'rgb(125, 62, 90)',\n                      borderRadius: '0.3em',\n                      color: 'white',\n                      padding: '0.1em 0.3em',\n                      textDecoration: 'none'}} >\n                    <Landscape />\n                    Cansel\n                  </Button>\n                </Link>\n                \n              </div>\n            </form>\n          </fieldset>\n      );// return\n      }\n      \n    }\n}\n\nexport default Removepage2;\n/**\n  {\n        _id: this.props.noteloc._id,\n        title: this.props.noteloc.title,\n        body: this.props.noteloc.body,\n        alat: this.props.noteloc.alat,\n        alng: this.props.noteloc.alng,\n        category: this.props.noteloc.category,\n        createdat: this.props.noteloc.createdat,\n        updatedat: new Date(),\n   }  \n      <select id=\"idcategory\" name=\"category\" \n                    value={note.category} >\n         <option value=\"\" >choose an option</option>\n      </select > \n */","import React from 'react';\nimport { Link } from 'react-router-dom';\n\n class Catlist extends React.Component {\n   constructor(props) {\n     super(props);\n     this.rendernotes = this.rendernotes.bind(this);\n   }\n  rendernotes() {\n    const a1 = Object.values(this.props.notes);\n  return  a1.map((n) => \n      <fieldset key={n._id}>\n        <legend>components/catlistjs</legend>\n        <h4 className=\"navbar\">\n          <Link style={{padding: '0.3em 0.8em 0.3em 0.8em '}}\n            to={`/notes/${n._id}`} > {n.title}\n          </Link>\n        </h4>\n      </fieldset>);\n    \n  }\n   render() {\n     return (\n       <div>\n         { this.rendernotes() }\n       </div>\n     );\n   }\n}\nexport default Catlist;","// like ./index.js\nimport React from 'react';\nimport Catlist from '../components/catlist';\nimport '../App.css';\nimport { StyleSheet,  Text, View } from 'react-native';\n// import { Link } from 'react-router-dom';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport Button from '@material-ui/core/Button';\nimport DB1 from '../db1';\n\nclass Showcategory2 extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state =  {\n      db1: new DB1(),\n      catnotes: {},\n      loading: true\n    }\n    console.log('showcategory2js;props', props);\n  }\n  static contextTypes = {\n    router: () => null, // replace with PropTypes.object if you use them\n  }\n  async componentDidMount() {\n      const catnotes = await this.state.db1.getcategory(this.props.cat);\n     // const catnotes = await this.state.db1.getcatnotesdb(this.props.cat);\n    this.setState({\n      catnotes,\n      loading: false\n    });\n  }\n  \n   render() {\n       // const a11 = Object.values(this.state.catnotes);\n       return (\n           <fieldset >\n              <legend>\n              <Button variant=\"contained\"  \n                onClick={this.context.router.history.goBack}\n                style={{backgroundColor: 'rgb(45,65, 100)',\n                borderRadius: '0.3em',\n                color: 'white',\n                padding: '0.1em 0.3em',\n                textDecoration: 'none',\n                textDecorationColor: 'blue'}} >\n                <ArrowBackIcon />back\n              </Button> &nbsp;\n                pages/showcategory2js\n              </legend> \n              <View style={styles.box}>\n                <Text style={styles.textunder}>\n                  plain React with Native insert \n                </Text>\n              </View>\n                 <h2><span style={{fontSize: '0.7em'}}>category:</span>{this.props.cat.title}</h2>\n               <Catlist notes={this.state.catnotes} />\n           </fieldset>\n       );\n   }\n}\nconst styles = StyleSheet.create({\n  box: { \n      borderRadius: '0.3em',\n      padding: 10,\n      backgroundColor: 'rgba(125, 125, 100, 0.88)'\n      },\n  text: { fontWeight: 'bold', color: '#ffffff' },\n  textunder: { fontWeight: 'bold', color: '#ffffff', \n  textDecorationLine: \"underline\" }\n});\nexport default Showcategory2;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport LibraryBooksIcon from '@material-ui/icons/LibraryBooks';\n// import Archive from '@material-ui/icons/Archive';\nimport ListRoundedIcon from '@material-ui/icons/ListRounded';\nimport Button from '@material-ui/core/Button';\nimport '../App.css';\n\nconst styles1 = theme => ({\n  button: {\n      backgroundColor: 'rgb(45, 65, 100)',\n      color: 'white',\n      alignSelf: \"center\",\n      onMouseOver: 'style.backgroundColor = \"green\"'\n  },\n  \n});\n\nclass Footer3 extends React.Component {\n    render ()   {\n      const { classes } = this.props;\n        return (\n          <nav className=\"navfooter navbarbackground\">\n              <legend> navfooter.js</legend> \n              {/* <Link to=\"/categornativemini\" style={{textDecoration: 'none'}}>\n               <Button variant=\"contained\"  style={{backgroundColor: 'rgb(45,65, 100)',\n                        borderRadius: '0.3em',\n                        color: 'white',\n                        padding: '0.1em 0.3em'}} >\n                  <LibraryBooksIcon />Categories:minimum FlatList\n                </Button>\n              </Link> */}\n              <Link to=\"/categories1\" \n                 style={{textDecoration: 'none', marginTop: '0.5em'}}>\n               <Button classes={{ root: classes.button }} >\n                  <LibraryBooksIcon />Categories:minimum FlatList\n                </Button>\n              </Link>\n              <Link to=\"/categornative\" \n                 style={{textDecoration: 'none', marginTop: '0.5em'}}>\n               <Button classes={{ root: classes.button }} >\n                  <LibraryBooksIcon />Categories: FlatList with Map()\n                </Button>\n              </Link>\n              <Link to=\"/\" \n                 style={{textDecoration: 'none', marginTop: '0.5em'}}>\n               <Button classes={{ root: classes.button }} >\n                  <ListRoundedIcon />List of Locations\n                </Button>\n              </Link>\n              <Link to=\"/sectionlist\" \n                 style={{textDecoration: 'none', marginTop: '0.5em'}}>\n               <Button   className={classes.button} >\n                  <LibraryBooksIcon /><ListRoundedIcon />Sectionlist\n                </Button>\n              </Link>\n              {/* <div>Date.now(): {Date.now()}</div> */}\n            </nav>\n        );\n    }\n}\n\nFooter3.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\nexport default withStyles(styles1)(Footer3);\n// style={{backgroundColor: 'rgb(45,65, 100)',\n//                         borderRadius: '0.3em',\n//                         color: 'white',\n//                         padding: '0.1em 0.3em'}}","// npm start\nimport React, { Component } from 'react';\nimport './App.css';\n// import PropTypes from 'prop-types';\nimport { Provider } from 'react-redux';\n\nimport store from './store';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport { StyleSheet, Text, View,\n  ActivityIndicator} from 'react-native';\nimport getos from './components/getos';\nimport Categories1 from './components/categories1';\nimport Categornative from './pages/categornative';\nimport Choosecatedit from './pages/choosecatedit';\nimport Chooselocedit from './pages/chooselocedit';\nimport Chooselocremove from './pages/chooselocremove';\nimport Editcat from './pages/editcat';\nimport Editpage from './pages/editreact';\nimport Hellonative from './components/hellonative';\n// import Categornativemini from './pages/categornativemini';\nimport Indexpage from './pages/index';\nimport Navbar2 from './components/navbar2';\n// import Navbar3 from './components/navbar3';\nimport Newcategory from './pages/newcategory';\nimport Newlocation from './pages/newlocation';\nimport Sectionlist12 from './pages/sectionlist12';\nimport Showpage from './pages/show';\nimport Removepage2 from './pages/remove2';\n// import Showcategory1 from './pages/showcategory1';\nimport Showcategory2 from './pages/showcategory2';\n// import Footer2 from './components/footer2';\nimport Footer3 from './components/footer3';\nimport DB1 from './db1';\nimport DB2 from './db2';\n\nconst stylesnative = StyleSheet.create({\n  box: { \n    width: '80%',\n    padding: '0.35em', \n    marginTop: '0.26em',\n    marginBottom: '0.26em',\n    backgroundColor: 'rgba(100, 116, 80, 0.7)',\n    borderRadius: '0.26em' },\n  text: { \n    textAlign: 'center',\n    fontWeight: 'bold', \n    fontSize: '1.7rem',\n    color: 'white' \n  }\n});\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.handleremove = this.handleremove.bind(this);\n  }\n  state =  {\n    dbapp: new DB1(),\n    dbcat: new DB2(),\n    notes: {},\n    categories: {},\n    catnotes: {},\n    loading: true\n  }\n  async componentDidMount() {\n    console.log('app;did;os=', getos(), \n      'process.env:', process.env);\n    const notes = await this.state.dbapp.getallnotes();\n    // console.log('app;did;notes.keys=', Object.keys(notes));\n    console.log('app;did;notes=', notes);\n    const categories = await this.state.dbcat.getcategories();\n  this.setState({\n    notes,\n    categories,\n    loading: false\n});\n}\n \n  handlesave = async (note) => {\n    let { id } = await this.state.dbapp.createnote(note);\n  // let res = await this.state.dbapp.create(note);\n  // let { id } = res;\n    const { notes } = this.state;\n    this.setState({\n      notes: {\n        ...notes,\n        [id]: note\n      }\n    });\n    return id;\n  }\n  handlesaveedit = async (note) => {\n    let { id } = await this.state.dbapp.editnote(note);\n    const { notes } = this.state;\n    console.log('app;handglesaveedit;notes before set=', notes);\n    this.setState({\n      notes: {\n        ...notes,\n        [id]: note\n      }\n    });\n  }\n  handleremove = async (note) => {\n    let lenkeys = Object.keys(this.state.notes).length;\n    console.log('app;handleremove;length of keys=', lenkeys);\n    console.log('app;handleremove;note._id=', note._id);\n    await this.state.dbapp.removenote(note);\n    /**\n     \n     let newnotes = this.state.notes.filter(m => \n      { \n        console.log('app;handleremove;m.key=', Object.keys(m), ';note._id=', note._id);\n        return Object.keys(m) !== note._id })\n\nvar countriesFiltered = Object.keys(countries)\n    .filter(function(key) { return countries[key] <= 1000000000;})\n    .map(function(key) { return countries[key];});\n\n        const prop = 'color'\nconst newCar = Object.keys(car)\n  .reduce((object, key) => { if (key !== prop) { object[key] = car[key] }\n    return object\n  }, {})\n  let i11 = 0;\n  for (var foo in notes) {\n    if (i11===0 && notes.hasOwnProperty(foo) && notes[foo] == note)\n    { \n      i11 = 1;\n      delete.notes[foo]; // mutable\n     }\n  }\n     */ \n    const a = note._id;\n    const b = this.state.notes;\n    const renotes = Object.keys(b)\n      .reduce((object, key) => {\n        if (key !== a) { object[key] = b[key] } \n        return object;\n      }, {});\n      lenkeys = Object.keys(renotes).length;\n      console.log('app;handleremove;length renotes keys=', lenkeys);\n    this.setState({\n      notes: renotes\n    });\n    console.log('app;handleremove;props=', this.props);\n    // this.props.history.replace('/sectionlist');\n  }\n  getcatnotesap = async (c) => {\n    const catnotes = await this.state.dbapp.getcatnotesdb(c);\n    this.setState({\n      catnotes,\n      loading: false\n  });\n  };\n  handlesavecategory = async (c) => {\n    let { id } = await this.state.dbcat.createcategory(c);\n    const { categories } = this.state;\n    this.setState({\n      categories: {\n        ...categories,\n        [id]: c\n      }\n    });\n    return id;\n  }\n  handlesaveeditcat = async (c, array) => {\n    console.log('app;handlesaveeditcat;c = ', c);\n    console.log('app;handlesaveeditcat;array = ', array);\n    await this.state.dbcat.editcat(c); // response of put\n    const categories = await this.state.dbcat.getcategories();\n    await this.state.dbapp.editarray(array);\n    const notes = await this.state.dbapp.getallnotes();\n    // console.log('app;did;notes.keys=', Object.keys(notes));\n    console.log('app;did;notes=', notes);\n    \n  this.setState({\n    notes,\n    categories,\n    loading: false\n});\n  }\n  rendercontent() {\n    if (this.state.loading) { \n      return <h2>\n        <ActivityIndicator size=\"large\" \n          color=\"rgb(135, 125, 100)\" animating />\n      </h2> }\n    return (\n      <div className=\"appcontent\">\n        <Route exact path=\"/\"  component={(props) => \n            <Indexpage {...props} notes={this.state.notes}/>} />\n        <Route exact path=\"/notes/:id\" component={(props) => \n            <Showpage {...props} \n              note={this.state.notes[props.match.params.id]} />} />\n        <Route exact path=\"/new\" component={(props) => \n            <Newlocation {...props} onsave={this.handlesave}/>} />\n        <Route exact path=\"/newcategory\" component={(props) => \n            <Newcategory {...props} onsave={this.handlesavecategory} /> } />\n        <Route exact path=\"/choosecatedit\" component={(props) => \n            <Choosecatedit {...props} categories={this.state.categories} />} />\n        <Route exact path=\"/chooselocedit\" component={(props) => \n            <Chooselocedit {...props} notes={this.state.notes} />} />\n        <Route exact path=\"/chooselocremove\" component={(props) => \n            <Chooselocremove {...props} notes={this.state.notes} />} />\n        <Route exact path=\"/locedit/:id\" component={(props) => \n            <Editpage {...props} onsaveedit={this.handlesaveedit}\n              noteloc={this.state.notes[props.match.params.id]}/>} />\n        <Route exact path=\"/cateedit/:id\" component={(props) => \n            <Editcat {...props} \n            cat={this.state.categories[props.match.params.id]}\n            onsaveedit={this.handlesaveeditcat} />\n              } /> \n        <Route exact path=\"/locremove/:id\" component={(props) => \n            <Removepage2 {...props} onremove={this.handleremove}\n              noteloc={this.state.notes[props.match.params.id]}\n              dbloc={this.state.dbapp} />} />\n              {/* flat with map */}\n        <Route exact path=\"/categornative\" component={(props) => \n            <Categornative {...props} categories={this.state.categories}/>} /> \n        {/* <Route exact path=\"/categornativemini\" component={(props) => \n            <Categornativemini {...props} notes={this.state.notes}/>} /> */}\n        {/* <Route exact path=\"/sectionlist\" component={(props) => \n            <Sectionlist11 {...props} \n              notvalues={Object.values(this.state.notes)}\n              catvalues={Object.values(this.state.categories)} />} /> */}\n         <Route exact path=\"/sectionlist\" component={(props) => \n            <Sectionlist12 {...props} notes={this.state.notes}\n              categories1={this.state.categories} />} />\n              {/* traversy */}\n        <Route exact path=\"/categories1\" component={(props) => \n            <Categories1 {...props} categories={this.state.categories} />} /> \n        {/* infinite update <Route exact path=\"/categories/:id\" component={(props) => \n            <Showcategory1 {...props} getcatnotessh={this.getcatnotesap}\n              cat={this.state.categories[props.match.params.id]} />} /> */}\n        <Route exact path=\"/categories/:id\" component={(props) => \n            <Showcategory2 {...props} \n              cat={this.state.categories[props.match.params.id]} />} />\n    </div>\n    );\n  }\n  indicator11 = () => this.state.loading ? \n    (<ActivityIndicator size=\"large\" color=\"rgb(135, 125, 100)\" animating />)\n    : null\n    ;\n  render() {\n    const reactvers = React.version;\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <div className=\"App\">\n            React {reactvers}\n            <Navbar2 />\n            <View style={stylesnative.box}>\n              <Text style={stylesnative.text}>React Native Insert</Text>\n            </View>\n            { this.rendercontent() }\n            \n            <Hellonative />\n            <Footer3 />\n          </div>\n      </BrowserRouter>\n      </Provider>\n      \n      \n    );\n  }\n}\n// App.propTypes = {\n//   store: PropTypes.object.isRequired,\n// }\nexport default App;\n//  {/* <Editcat {...props} onsaveedit={this.handlesaveeditcat}\n//               notecat={this.state.categories[props.match.params.id]}/> */}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// import React from 'react';\n// import ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { AppRegistry } from 'react-native';\n\n// ReactDOM.render(<App />, document.getElementById('root'));\nAppRegistry.registerComponent(\"App\", () => App);\nAppRegistry.runApplication(\"App\", {\n    rootTag: document.getElementById(\"root\")\n});\nserviceWorker.unregister();\n"],"sourceRoot":""}